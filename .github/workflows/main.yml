name: MKConnect Fyne Cross Build & Release (All OS/Arch)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Download Go dependencies
        run: go mod download
      - run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - run: fyne-cross linux -arch amd64,386,arm,arm64
      - name: Rename Linux artifacts
        run: |
          APP_NAME="MKConnect"
          cd fyne-cross/dist/
          ls -la
          for arch in amd64 386 arm arm64; do
            if [ -f "linux-${arch}.tar.xz" ]; then
              mv "linux-${arch}.tar.xz" "${APP_NAME}-linux-${arch}.tar.xz"
            fi
          done
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: fyne-cross/dist/
          if-no-files-found: warn

  build-windows:
    name: Build Windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Download Go dependencies
        run: go mod download
      - run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - run: fyne-cross windows -arch amd64,386,arm64 --app-id com.mkconnect.app
      - name: Rename Windows artifacts
        run: |
          APP_NAME="MKConnect"
          cd fyne-cross/dist/
          ls -la
          for arch in amd64 386 arm64; do
            if [ -f "windows-${arch}.exe" ]; then
              mv "windows-${arch}.exe" "${APP_NAME}-windows-${arch}.exe"
            fi
          done
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: fyne-cross/dist/
          if-no-files-found: warn

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Download Go dependencies
        run: go mod download
      - name: Install macOS dependencies
        run: |
          brew install pkg-config xz
          sudo mkdir -p /usr/local/Cellar/osxcross
          sudo chown $USER:admin /usr/local/Cellar/osxcross
          git clone https://github.com/tpoechtrager/osxcross.git /usr/local/Cellar/osxcross
          cd /usr/local/Cellar/osxcross
          ./tools/gen_sdk_package.sh || true
          tar -xJf *.tar.xz -C /usr/local/Cellar/osxcross || true
          SDK_DIR=$(find /usr/local/Cellar/osxcross -type d -name "MacOSX*.sdk" | head -n 1)
          if [ -z "$SDK_DIR" ]; then
            echo "No SDK directory found, using fallback"
            SDK_DIR=/usr/local/Cellar/osxcross/MacOSX15.0.sdk
            mkdir -p $SDK_DIR
          fi
          echo "SDK_DIR=$SDK_DIR" >> $GITHUB_ENV
        continue-on-error: true
      - run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - name: Build with fyne-cross
        run: fyne-cross darwin -arch amd64,arm64 --app-id com.mkconnect.app -macosx-version-min=11.0 || true
        env:
          CGO_ENABLED: 1
          CC: clang
          CXX: clang++
        continue-on-error: true
      - name: Rename macOS artifacts
        run: |
          APP_NAME="MKConnect"
          cd fyne-cross/dist/
          ls -la
          for arch in amd64 arm64; do
            if [ -f "darwin-${arch}.tar.gz" ]; then
              mv "darwin-${arch}.tar.gz" "${APP_NAME}-macos-${arch}.app.tar.gz"
            fi
          done
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: fyne-cross/dist/
          if-no-files-found: warn

  build-freebsd:
    name: Build FreeBSD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Download Go dependencies
        run: go mod download
      - run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - run: fyne-cross freebsd -arch amd64 || true
      - run: fyne-cross freebsd -arch 386 || true
      - run: fyne-cross freebsd -arch arm64 || true
      - run: fyne-cross freebsd -arch arm || true
      - name: Rename FreeBSD artifacts
        run: |
          APP_NAME="MKConnect"
          cd fyne-cross/dist/
          ls -la
          for arch in amd64 386 arm64 arm; do
            if [ -f "freebsd-${arch}.tar.gz" ]; then
              mv "freebsd-${arch}.tar.gz" "${APP_NAME}-freebsd-${arch}.tar.gz"
            fi
          done
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          name: freebsd-builds
          path: fyne-cross/dist/
          if-no-files-found: warn

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Download Go dependencies
        run: go mod download
      - run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - uses: android-actions/setup-android@v3
      - name: Install Android NDK
        run: |
          sdkmanager --install "ndk;23.1.7779620"
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/23.1.7779620
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
      - run: fyne-cross android -arch amd64,arm64,arm --app-id com.mkconnect.app || true
      - name: Rename Android artifacts
        run: |
          APP_NAME="MKConnect"
          cd fyne-cross/dist/
          ls -la
          for arch in amd64 arm64 arm; do
            if [ -f "android-${arch}.apk" ]; then
              mv "android-${arch}.apk" "${APP_NAME}-android-${arch}.apk"
            fi
          done
          ls -la
      - uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: fyne-cross/dist/
          if-no-files-found: warn

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-windows
      - build-macos
      - build-freebsd
      - build-android
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Collect and compress builds
        run: |
          mkdir -p release
          cd artifacts

          # Compress Android builds
          if [ -d "android-builds" ]; then
            zip -r ../release/android-builds.zip android-builds/
          fi
          
          # Compress Windows builds
          if [ -d "windows-builds" ]; then
            zip -r ../release/windows-builds.zip windows-builds/
          fi
          
          # Compress Linux builds
          if [ -d "linux-builds" ]; then
            zip -r ../release/linux-builds.zip linux-builds/
          fi
          
          # Compress FreeBSD builds
          if [ -d "freebsd-builds" ]; then
            zip -r ../release/freebsd-builds.zip freebsd-builds/
          fi
          
          # Compress macOS builds
          if [ -d "macos-builds" ]; then
            zip -r ../release/macos-builds.zip macos-builds/
          fi
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ðŸš€ Multi-platform build from Fyne Cross
            Includes binaries for:
            - Linux (amd64, 386, arm, arm64)
            - Windows (amd64, 386, arm64)
            - macOS (amd64, arm64)
            - FreeBSD (amd64, 386, arm64, arm)
            - Android (amd64, arm64, arm)
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}